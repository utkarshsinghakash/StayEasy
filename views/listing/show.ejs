<%layout("/layouts/boilerplate")-%>
<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap");

  body {
    font-family: "Poppins", sans-serif;
    background-color: #f9f9f9;
  }

  .booking-container {
    border-radius: 15px;
    padding: 25px;
    background-color: #fff;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.3s ease;
  }

  .booking-container:hover {
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
  }

  .info {
    display: flex;
    flex-wrap: wrap;
  }

  h2,
  .price-per-night {
    font-weight: 600;
  }

  .price-per-night {
    font-size: 26px;
    color: #ff6b6b;
    margin-bottom: 15px;
  }

  .booking-dates,
  .guest-day {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
  }

  .check-in-out label,
  .guests label {
    font-weight: 600;
    margin-bottom: 8px;
    display: block;
    color: #333;
  }

  .check-in-out input,
  .guests select {
    padding: 12px;
    border-radius: 10px;
    border: 1px solid #ddd;
    width: 100%;
  }

  .reserve-button {
    background: linear-gradient(90deg, #ff5a5f 0%, #ff6b6b 100%);
    color: white;
    padding: 15px;
    border: none;
    border-radius: 10px;
    font-size: 16px;
    font-weight: bold;
    transition: transform 0.3s ease;
  }

  .reserve-button:hover {
    background: linear-gradient(90deg, #ff6b6b 0%, #ff5a5f 100%);
    transform: scale(1.05);
  }

  .no-charge {
    text-align: center;
    color: #777;
    margin: 20px 0;
    font-size: 14px;
  }

  .price-breakdown {
    font-size: 16px;
    color: #333;
  }

  .price-breakdown p {
    display: flex;
    justify-content: space-between;
    margin: 10px 0;
  }

  .price-breakdown hr {
    border: none;
    border-top: 1px solid #ddd;
    margin: 15px 0;
  }

  .map-container {
    margin-top: 30px;
  }

  #map {
    height: 300px;
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  /* Responsive Styles */
  @media (max-width: 768px) {
    .info {
      flex-direction: column;
    }
    .booking-container {
      margin-top: 20px;
    }
    .booking-dates,
    .guest-day {
      grid-template-columns: 1fr;
    }
  }
</style>
<body>
  <div class="row mt-3">
    <div class="col-lg-8 offset-lg-4">
      <h2><%= myListing.title %></h2>
    </div>
    <div class="info">
      <div class="listing-card card col-lg-6">
        <img class="card-img-top show-img" src="<%= myListing.image %>" />
        <div class="card-body">
          <p>
            <b>Rooms in <%= myListing.location %>, <%= myListing.country %></b>
          </p>
          <p>Hosted by <b><%= myListing.owner.username %></b></p>
          <p>
            Price: &#8377;<%= myListing.price.toLocaleString('en-IN') %> per
            night
          </p>
        </div>
      </div>
      <div class="booking-container col-lg-6">
        <div class="price-per-night">&#8377;<%= myListing.price %> / night</div>
        <form>
          <div class="booking-dates">
            <div>
              <label for="checkIn">Check-In</label>
              <input type="date" id="checkIn" name="checkIn" />
            </div>
            <div>
              <label for="checkOut">Check-Out</label>
              <input type="date" id="checkOut" name="checkOut" />
            </div>
          </div>
          <div class="guest-day">
            <div>
              <label for="days">Days</label>
              <input type="number" id="days" readonly />
            </div>
            <div>
              <label for="guests">Guests</label>
              <select id="guests">
                <option>1 guest</option>
                <option>2 guests</option>
                <option>3 guests</option>
              </select>
            </div>
          </div>
          <button type="submit" class="reserve-button">Reserve</button>
          <p class="no-charge">You won't be charged yet</p>
          <div class="price-breakdown">
            <p>Total Price: &#8377;<span id="total-price">0</span></p>
            <p>Total with Tax: &#8377;<span id="final-price">0</span></p>
          </div>
        </form>
      </div>
    </div>
    <div class="col-lg-8 offset-lg-2 map-container">
      <h3>Where you'll be</h3>
      <div id="map"></div>
    </div>
  </div>
</body>

<script>
  // Function to calculate the number of days and total price
  function calculateDaysAndTotal() {
    const checkInDate = new Date(document.getElementById("checkIn").value);
    const checkOutDate = new Date(document.getElementById("checkOut").value);
    const timeDiff = checkOutDate - checkInDate;

    if (timeDiff >= 0) {
      // Calculate the number of days
      const days = timeDiff / (1000 * 60 * 60 * 24);
      document.getElementById("days").value = days;
      document.getElementById("total-nights").innerText = days;

      // Calculate the total price
      const pricePerNight = "<%= myListing.price %>";
      const totalPrice = pricePerNight * days;
      document.getElementById("total-price").innerText = totalPrice.toFixed(2);

      // Calculate the final price including taxes (18% GST)
      const totalWithTax = totalPrice + totalPrice * 0.18;
      document.getElementById("final-price").innerText =
        totalWithTax.toFixed(2);
    } else {
      // Reset values if checkout date is before check-in date
      document.getElementById("days").value = "";
      document.getElementById("total-nights").innerText = 0;
      document.getElementById("total-price").innerText = "0";
      document.getElementById("final-price").innerText = "0";
    }
  }

  // Attach event listeners to the date inputs to recalculate on change
  document
    .getElementById("checkIn")
    .addEventListener("change", calculateDaysAndTotal);
  document
    .getElementById("checkOut")
    .addEventListener("change", calculateDaysAndTotal);

  let coordinates = JSON.parse(
    "<%-JSON.stringify(myListing.geometry.coordinates)%>"
  );
  let mapToken = "<%=process.env.MAP_TOKEN%>";
  mapboxgl.accessToken = mapToken;
  const map = new mapboxgl.Map({
    container: "map",
    style: "mapbox://styles/mapbox/streets-v12",
    projection: "globe", // Display the map as a globe, since satellite-v9 defaults to Mercator
    zoom: 10,
    center: coordinates,
  });

  console.log(coordinates);
  const marker = new mapboxgl.Marker({ color: "red" })
    .setLngLat([coordinates[0], coordinates[1]])
    .addTo(map);
</script>
